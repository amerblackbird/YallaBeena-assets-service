// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: proto/assets.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Asset represents an uploaded asset/file
type Asset struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	AssetId         string                 `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	AssetUrl        string                 `protobuf:"bytes,2,opt,name=asset_url,json=assetUrl,proto3" json:"asset_url,omitempty"`    // URL to access the asset
	PublicUrl       string                 `protobuf:"bytes,3,opt,name=public_url,json=publicUrl,proto3" json:"public_url,omitempty"` // Public URL if applicable
	Filename        string                 `protobuf:"bytes,4,opt,name=filename,proto3" json:"filename,omitempty"`
	ContentType     string                 `protobuf:"bytes,5,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	FileSize        int64                  `protobuf:"varint,6,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
	UserId          string                 `protobuf:"bytes,7,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ResouceType     string                 `protobuf:"bytes,8,opt,name=resouce_type,json=resouceType,proto3" json:"resouce_type,omitempty"`                                                   // Optional resource type (e.g., post, profile)
	ResourceId      string                 `protobuf:"bytes,9,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`                                                      // Optional resource ID (e.g., post ID, profile ID)
	Secure          bool                   `protobuf:"varint,10,opt,name=secure,proto3" json:"secure,omitempty"`                                                                              // Indicates if the asset is private/secure
	AccessLevel     string                 `protobuf:"bytes,11,opt,name=access_level,json=accessLevel,proto3" json:"access_level,omitempty"`                                                  // Access level (e.g., public, private)
	StorageKey      string                 `protobuf:"bytes,12,opt,name=storage_key,json=storageKey,proto3" json:"storage_key,omitempty"`                                                     // Key used in storage backend
	StorageProvider string                 `protobuf:"bytes,13,opt,name=storage_provider,json=storageProvider,proto3" json:"storage_provider,omitempty"`                                      // Storage provider (e.g., AWS S3,
	Metadata        map[string]string      `protobuf:"bytes,14,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Additional metadata (tags, description, etc.)
	Active          bool                   `protobuf:"varint,15,opt,name=active,proto3" json:"active,omitempty"`                                                                              // Indicates if the asset is active
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt       *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Asset) Reset() {
	*x = Asset{}
	mi := &file_proto_assets_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Asset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Asset) ProtoMessage() {}

func (x *Asset) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assets_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Asset.ProtoReflect.Descriptor instead.
func (*Asset) Descriptor() ([]byte, []int) {
	return file_proto_assets_proto_rawDescGZIP(), []int{0}
}

func (x *Asset) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *Asset) GetAssetUrl() string {
	if x != nil {
		return x.AssetUrl
	}
	return ""
}

func (x *Asset) GetPublicUrl() string {
	if x != nil {
		return x.PublicUrl
	}
	return ""
}

func (x *Asset) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *Asset) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *Asset) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *Asset) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Asset) GetResouceType() string {
	if x != nil {
		return x.ResouceType
	}
	return ""
}

func (x *Asset) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *Asset) GetSecure() bool {
	if x != nil {
		return x.Secure
	}
	return false
}

func (x *Asset) GetAccessLevel() string {
	if x != nil {
		return x.AccessLevel
	}
	return ""
}

func (x *Asset) GetStorageKey() string {
	if x != nil {
		return x.StorageKey
	}
	return ""
}

func (x *Asset) GetStorageProvider() string {
	if x != nil {
		return x.StorageProvider
	}
	return ""
}

func (x *Asset) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Asset) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *Asset) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Asset) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// UploadAssetRequest represents the request to upload an asset
type UploadAssetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	ContentType   string                 `protobuf:"bytes,2,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	FileData      []byte                 `protobuf:"bytes,3,opt,name=file_data,json=fileData,proto3" json:"file_data,omitempty"`
	UserId        string                 `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Additional metadata (tags, description, etc.)
	ResouceType   string                 `protobuf:"bytes,6,opt,name=resouce_type,json=resouceType,proto3" json:"resouce_type,omitempty"`                                                  // Optional resource type (e.g., post, profile)
	ResourceId    string                 `protobuf:"bytes,7,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadAssetRequest) Reset() {
	*x = UploadAssetRequest{}
	mi := &file_proto_assets_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadAssetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadAssetRequest) ProtoMessage() {}

func (x *UploadAssetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assets_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadAssetRequest.ProtoReflect.Descriptor instead.
func (*UploadAssetRequest) Descriptor() ([]byte, []int) {
	return file_proto_assets_proto_rawDescGZIP(), []int{1}
}

func (x *UploadAssetRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *UploadAssetRequest) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *UploadAssetRequest) GetFileData() []byte {
	if x != nil {
		return x.FileData
	}
	return nil
}

func (x *UploadAssetRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UploadAssetRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *UploadAssetRequest) GetResouceType() string {
	if x != nil {
		return x.ResouceType
	}
	return ""
}

func (x *UploadAssetRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

// UploadAssetResponse represents the response for uploading an asset
type UploadAssetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Asset         *Asset                 `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadAssetResponse) Reset() {
	*x = UploadAssetResponse{}
	mi := &file_proto_assets_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadAssetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadAssetResponse) ProtoMessage() {}

func (x *UploadAssetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assets_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadAssetResponse.ProtoReflect.Descriptor instead.
func (*UploadAssetResponse) Descriptor() ([]byte, []int) {
	return file_proto_assets_proto_rawDescGZIP(), []int{2}
}

func (x *UploadAssetResponse) GetAsset() *Asset {
	if x != nil {
		return x.Asset
	}
	return nil
}

// GetAssetRequest represents the request to get an asset by ID
type GetAssetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AssetId       string                 `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAssetRequest) Reset() {
	*x = GetAssetRequest{}
	mi := &file_proto_assets_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAssetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssetRequest) ProtoMessage() {}

func (x *GetAssetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assets_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssetRequest.ProtoReflect.Descriptor instead.
func (*GetAssetRequest) Descriptor() ([]byte, []int) {
	return file_proto_assets_proto_rawDescGZIP(), []int{3}
}

func (x *GetAssetRequest) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

// GetAssetResponse represents the response for getting an asset by ID
type GetAssetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Asset         *Asset                 `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAssetResponse) Reset() {
	*x = GetAssetResponse{}
	mi := &file_proto_assets_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAssetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssetResponse) ProtoMessage() {}

func (x *GetAssetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assets_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssetResponse.ProtoReflect.Descriptor instead.
func (*GetAssetResponse) Descriptor() ([]byte, []int) {
	return file_proto_assets_proto_rawDescGZIP(), []int{4}
}

func (x *GetAssetResponse) GetAsset() *Asset {
	if x != nil {
		return x.Asset
	}
	return nil
}

// GetAssetsByUserRequest represents the request to get assets by user ID
type GetAssetsByUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAssetsByUserRequest) Reset() {
	*x = GetAssetsByUserRequest{}
	mi := &file_proto_assets_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAssetsByUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssetsByUserRequest) ProtoMessage() {}

func (x *GetAssetsByUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assets_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssetsByUserRequest.ProtoReflect.Descriptor instead.
func (*GetAssetsByUserRequest) Descriptor() ([]byte, []int) {
	return file_proto_assets_proto_rawDescGZIP(), []int{5}
}

func (x *GetAssetsByUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetAssetsByUserRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetAssetsByUserRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

// GetAssetsByUserResponse represents the response for getting assets by user ID
type GetAssetsByUserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Assets        []*Asset               `protobuf:"bytes,1,rep,name=assets,proto3" json:"assets,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAssetsByUserResponse) Reset() {
	*x = GetAssetsByUserResponse{}
	mi := &file_proto_assets_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAssetsByUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssetsByUserResponse) ProtoMessage() {}

func (x *GetAssetsByUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assets_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssetsByUserResponse.ProtoReflect.Descriptor instead.
func (*GetAssetsByUserResponse) Descriptor() ([]byte, []int) {
	return file_proto_assets_proto_rawDescGZIP(), []int{6}
}

func (x *GetAssetsByUserResponse) GetAssets() []*Asset {
	if x != nil {
		return x.Assets
	}
	return nil
}

func (x *GetAssetsByUserResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// DeleteAssetRequest represents the request to delete an asset
type DeleteAssetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AssetId       string                 `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // For authorization
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAssetRequest) Reset() {
	*x = DeleteAssetRequest{}
	mi := &file_proto_assets_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAssetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAssetRequest) ProtoMessage() {}

func (x *DeleteAssetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assets_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAssetRequest.ProtoReflect.Descriptor instead.
func (*DeleteAssetRequest) Descriptor() ([]byte, []int) {
	return file_proto_assets_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteAssetRequest) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *DeleteAssetRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// DeleteAssetResponse represents the response for deleting an asset
type DeleteAssetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAssetResponse) Reset() {
	*x = DeleteAssetResponse{}
	mi := &file_proto_assets_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAssetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAssetResponse) ProtoMessage() {}

func (x *DeleteAssetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assets_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAssetResponse.ProtoReflect.Descriptor instead.
func (*DeleteAssetResponse) Descriptor() ([]byte, []int) {
	return file_proto_assets_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteAssetResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteAssetResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// HealthCheckRequest represents a health check request
type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_proto_assets_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assets_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_proto_assets_proto_rawDescGZIP(), []int{9}
}

// HealthCheckResponse represents a health check response
type HealthCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Service       string                 `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
	Version       string                 `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_proto_assets_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_assets_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_proto_assets_proto_rawDescGZIP(), []int{10}
}

func (x *HealthCheckResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HealthCheckResponse) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *HealthCheckResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

var File_proto_assets_proto protoreflect.FileDescriptor

const file_proto_assets_proto_rawDesc = "" +
	"\n" +
	"\x12proto/assets.proto\x12\x06assets\x1a\x1fgoogle/protobuf/timestamp.proto\"\xa2\x05\n" +
	"\x05Asset\x12\x19\n" +
	"\basset_id\x18\x01 \x01(\tR\aassetId\x12\x1b\n" +
	"\tasset_url\x18\x02 \x01(\tR\bassetUrl\x12\x1d\n" +
	"\n" +
	"public_url\x18\x03 \x01(\tR\tpublicUrl\x12\x1a\n" +
	"\bfilename\x18\x04 \x01(\tR\bfilename\x12!\n" +
	"\fcontent_type\x18\x05 \x01(\tR\vcontentType\x12\x1b\n" +
	"\tfile_size\x18\x06 \x01(\x03R\bfileSize\x12\x17\n" +
	"\auser_id\x18\a \x01(\tR\x06userId\x12!\n" +
	"\fresouce_type\x18\b \x01(\tR\vresouceType\x12\x1f\n" +
	"\vresource_id\x18\t \x01(\tR\n" +
	"resourceId\x12\x16\n" +
	"\x06secure\x18\n" +
	" \x01(\bR\x06secure\x12!\n" +
	"\faccess_level\x18\v \x01(\tR\vaccessLevel\x12\x1f\n" +
	"\vstorage_key\x18\f \x01(\tR\n" +
	"storageKey\x12)\n" +
	"\x10storage_provider\x18\r \x01(\tR\x0fstorageProvider\x127\n" +
	"\bmetadata\x18\x0e \x03(\v2\x1b.assets.Asset.MetadataEntryR\bmetadata\x12\x16\n" +
	"\x06active\x18\x0f \x01(\bR\x06active\x129\n" +
	"\n" +
	"created_at\x18\x10 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x11 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd0\x02\n" +
	"\x12UploadAssetRequest\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12!\n" +
	"\fcontent_type\x18\x02 \x01(\tR\vcontentType\x12\x1b\n" +
	"\tfile_data\x18\x03 \x01(\fR\bfileData\x12\x17\n" +
	"\auser_id\x18\x04 \x01(\tR\x06userId\x12D\n" +
	"\bmetadata\x18\x05 \x03(\v2(.assets.UploadAssetRequest.MetadataEntryR\bmetadata\x12!\n" +
	"\fresouce_type\x18\x06 \x01(\tR\vresouceType\x12\x1f\n" +
	"\vresource_id\x18\a \x01(\tR\n" +
	"resourceId\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\":\n" +
	"\x13UploadAssetResponse\x12#\n" +
	"\x05asset\x18\x01 \x01(\v2\r.assets.AssetR\x05asset\",\n" +
	"\x0fGetAssetRequest\x12\x19\n" +
	"\basset_id\x18\x01 \x01(\tR\aassetId\"7\n" +
	"\x10GetAssetResponse\x12#\n" +
	"\x05asset\x18\x01 \x01(\v2\r.assets.AssetR\x05asset\"_\n" +
	"\x16GetAssetsByUserRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x03 \x01(\x05R\x06offset\"a\n" +
	"\x17GetAssetsByUserResponse\x12%\n" +
	"\x06assets\x18\x01 \x03(\v2\r.assets.AssetR\x06assets\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"H\n" +
	"\x12DeleteAssetRequest\x12\x19\n" +
	"\basset_id\x18\x01 \x01(\tR\aassetId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"I\n" +
	"\x13DeleteAssetResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x14\n" +
	"\x12HealthCheckRequest\"a\n" +
	"\x13HealthCheckResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x18\n" +
	"\aservice\x18\x02 \x01(\tR\aservice\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion2\xfa\x02\n" +
	"\rAssetsService\x12F\n" +
	"\vUploadAsset\x12\x1a.assets.UploadAssetRequest\x1a\x1b.assets.UploadAssetResponse\x12=\n" +
	"\bGetAsset\x12\x17.assets.GetAssetRequest\x1a\x18.assets.GetAssetResponse\x12R\n" +
	"\x0fGetAssetsByUser\x12\x1e.assets.GetAssetsByUserRequest\x1a\x1f.assets.GetAssetsByUserResponse\x12F\n" +
	"\vDeleteAsset\x12\x1a.assets.DeleteAssetRequest\x1a\x1b.assets.DeleteAssetResponse\x12F\n" +
	"\vHealthCheck\x12\x1a.assets.HealthCheckRequest\x1a\x1b.assets.HealthCheckResponseB Z\x1eassets-service/proto/gen/protob\x06proto3"

var (
	file_proto_assets_proto_rawDescOnce sync.Once
	file_proto_assets_proto_rawDescData []byte
)

func file_proto_assets_proto_rawDescGZIP() []byte {
	file_proto_assets_proto_rawDescOnce.Do(func() {
		file_proto_assets_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_assets_proto_rawDesc), len(file_proto_assets_proto_rawDesc)))
	})
	return file_proto_assets_proto_rawDescData
}

var file_proto_assets_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_proto_assets_proto_goTypes = []any{
	(*Asset)(nil),                   // 0: assets.Asset
	(*UploadAssetRequest)(nil),      // 1: assets.UploadAssetRequest
	(*UploadAssetResponse)(nil),     // 2: assets.UploadAssetResponse
	(*GetAssetRequest)(nil),         // 3: assets.GetAssetRequest
	(*GetAssetResponse)(nil),        // 4: assets.GetAssetResponse
	(*GetAssetsByUserRequest)(nil),  // 5: assets.GetAssetsByUserRequest
	(*GetAssetsByUserResponse)(nil), // 6: assets.GetAssetsByUserResponse
	(*DeleteAssetRequest)(nil),      // 7: assets.DeleteAssetRequest
	(*DeleteAssetResponse)(nil),     // 8: assets.DeleteAssetResponse
	(*HealthCheckRequest)(nil),      // 9: assets.HealthCheckRequest
	(*HealthCheckResponse)(nil),     // 10: assets.HealthCheckResponse
	nil,                             // 11: assets.Asset.MetadataEntry
	nil,                             // 12: assets.UploadAssetRequest.MetadataEntry
	(*timestamppb.Timestamp)(nil),   // 13: google.protobuf.Timestamp
}
var file_proto_assets_proto_depIdxs = []int32{
	11, // 0: assets.Asset.metadata:type_name -> assets.Asset.MetadataEntry
	13, // 1: assets.Asset.created_at:type_name -> google.protobuf.Timestamp
	13, // 2: assets.Asset.updated_at:type_name -> google.protobuf.Timestamp
	12, // 3: assets.UploadAssetRequest.metadata:type_name -> assets.UploadAssetRequest.MetadataEntry
	0,  // 4: assets.UploadAssetResponse.asset:type_name -> assets.Asset
	0,  // 5: assets.GetAssetResponse.asset:type_name -> assets.Asset
	0,  // 6: assets.GetAssetsByUserResponse.assets:type_name -> assets.Asset
	1,  // 7: assets.AssetsService.UploadAsset:input_type -> assets.UploadAssetRequest
	3,  // 8: assets.AssetsService.GetAsset:input_type -> assets.GetAssetRequest
	5,  // 9: assets.AssetsService.GetAssetsByUser:input_type -> assets.GetAssetsByUserRequest
	7,  // 10: assets.AssetsService.DeleteAsset:input_type -> assets.DeleteAssetRequest
	9,  // 11: assets.AssetsService.HealthCheck:input_type -> assets.HealthCheckRequest
	2,  // 12: assets.AssetsService.UploadAsset:output_type -> assets.UploadAssetResponse
	4,  // 13: assets.AssetsService.GetAsset:output_type -> assets.GetAssetResponse
	6,  // 14: assets.AssetsService.GetAssetsByUser:output_type -> assets.GetAssetsByUserResponse
	8,  // 15: assets.AssetsService.DeleteAsset:output_type -> assets.DeleteAssetResponse
	10, // 16: assets.AssetsService.HealthCheck:output_type -> assets.HealthCheckResponse
	12, // [12:17] is the sub-list for method output_type
	7,  // [7:12] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_proto_assets_proto_init() }
func file_proto_assets_proto_init() {
	if File_proto_assets_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_assets_proto_rawDesc), len(file_proto_assets_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_assets_proto_goTypes,
		DependencyIndexes: file_proto_assets_proto_depIdxs,
		MessageInfos:      file_proto_assets_proto_msgTypes,
	}.Build()
	File_proto_assets_proto = out.File
	file_proto_assets_proto_goTypes = nil
	file_proto_assets_proto_depIdxs = nil
}
